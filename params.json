{"name":"augmented-go","tagline":"Augmented Go","body":"## What is AugmentedGo?\r\n\r\nThink of it as a kind of recording/capturing software for a real-world game of go.  \r\nIt recognizes every move you do on a go board with a stationary webcam (or whatever you choose) and keeps track of these moves on a virtual board.\r\nThe software internally models the rules of the game, therefore illegal moves will be reported on the virtual board. \r\nYou can also save your game as the standard Smart Game Format (SGF) to archive your game records.\r\n\r\n### Limitations\r\nThere are some constraints for the setup if you want to run it flawlessly.\r\n\r\n#### Working and tested components\r\n- Light brown game of go board with black lines\r\n    - Supported sizes: 19x19, 13x13, 9x9\r\n    - Place it on a white table if you want a working automatic board detection\r\n- Black and white go stones\r\n- Logitech webcam, but it should work with any kind of webcam\r\n\r\n#### Recommendations for the setup\r\n- The webcam has to be located right on top of the go board (example follows)\r\n    - and must have the complete board in its viewport\r\n- Provide good lighting\r\n\r\nIt is possible to get the program to run on a different setup but these aren't officially supported. Just try it!\r\n\r\n### Virtual Game\r\nYou can also play a completely virtual game without a webcam.\r\nEither start a new game with a 19x19 board or continue a game that you captured with the webcam.  \r\nJust hover over the virtual board and klick where you want to play your move!\r\n\r\n### Supported Platforms\r\nDevelopement targets primarily the Windows OS, specifically Windows 7.  \r\nWe use platform independent libraries and the cmake build system, so other platforms should be okay too. But there currently isn't any motivation to build the program on other platforms though.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}